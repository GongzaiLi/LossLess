# port used to listen to requests
server.port=9499

### defining data source (MariaDB - SQL)
#spring.datasource.driverClassName=org.mariadb.jdbc.Driver
### connection details
#
## To connect from home
## ssh using command: 'abc123@linux.cosc.canterbury.ac.nz -L 3306:db2.csse.canterbury.ac.nz:3306 -N'
## where abc123 is your usercode
## then set the datasource to the one commented out below
##spring.datasource.url=jdbc:mariadb://localhost/seng302-2021-team700-test
#
#spring.datasource.url=jdbc:mariadb://db2.csse.canterbury.ac.nz/seng302-2021-team700-test
#spring.datasource.username=seng302-team700
#spring.datasource.password=DominantEvidence2161
### MariaDB dialect (language) wrapper
#spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect
#
### update the SQL schema at boot time (may be dangerous if used on real DB)
#spring.jpa.hibernate.ddl-auto=create-drop


# alternatively, use H2 (in-memory DB)
spring.datasource.driverClassName=org.h2.Driver
# connection details
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
# H2 needs a special dialect wrapper
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# ask H2 to create / update the SQL schema at boot time (may be dangerous if used on real DB)
spring.jpa.hibernate.ddl-auto=update
# enable GUI console (similar to myPHPAdmin)
spring.h2.console.enabled=true
spring.h2.console.path=/h2
# print SQL statements
spring.jpa.properties.hibernate.format_sql=true

spring.mvc.format.date=yyyy-MM-dd
spring.main.allow-bean-definition-overriding=true
