# port used to listen to requests
server.port=9499

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

## alternatively, use H2 (in-memory DB)
spring.datasource.driverClassName=org.h2.Driver
## connection details
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=
## H2 needs a special dialect wrapper
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
## ask H2 to create / update the SQL schema at boot time (may be dangerous if used on real DB)
spring.jpa.hibernate.ddl-auto=update
## enable GUI console (similar to myPHPAdmin)
spring.h2.console.enabled=true
spring.h2.console.path=/h2
# print SQL statements
spring.jpa.properties.hibernate.format_sql=true

spring.mvc.format.date=yyyy-MM-dd

spring.output.ansi.enabled=always

#specify a path for log file
#logging.file.path=/

logging.file.name=spring.log

#set debug to true for printing more detailed logs
#debug=true

# Default log fie size is 10 MB. Change using:
#logging.logback.rollingpolicy.max-file-size=10

#logging.level.root=warn
#logging.level.org.springframework.web=debug
#logging.level.org.hibernate=error

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB


